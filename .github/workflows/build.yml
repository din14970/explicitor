name: build

on: 
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
  build-and-test:
    name: ${{ matrix.os }}/py${{ matrix.python-version }}/pip
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.3.2
      - name: Install depedencies and package
        shell: bash
        run: | 
          poetry config virtualenvs.create false
          poetry install --no-interaction --ansi
      - name: Run tests
        run: pytest --cov=explicitor -vv
      - name: Generate line coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: coverage report --show-missing
